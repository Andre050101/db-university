QUERIES ESERCITAZIONE 20/01/2025
Queries con select:

1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT `id`, `name`, `surname`
FROM `students`
WHERE YEAR(`date_of_birth`) = '1990'

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT `name` 
FROM `courses`
WHERE `cfu` > '10'

3. Selezionare tutti gli studenti che hanno più di 30 anni
SELECT `id`, `name`, `surname`
FROM `students`
WHERE (YEAR(CURDATE())-YEAR(`date_of_birth`)) > 30 

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
SELECT *
FROM `courses`
WHERE `period` = 'I semestre'
AND `year` = '1'

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
SELECT *
FROM `exams` 
WHERE `date` = '2020-06-20'
AND `hour` > '14:00:00'

6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT * 
FROM `degrees`
WHERE `level` = 'magistrale'

7. Da quanti dipartimenti è composta l'università? (12)
SELECT COUNT(*)
FROM `departments`

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT COUNT(*)
FROM `teachers`
WHERE `phone` IS NULL

9. Inserire nella tabella degli studenti un nuovo record con i propri dati (per il campo
degree_id, inserire un valore casuale)
INSERT INTO `students` (`id`, `degree_id`, `name`, `surname`, `date_of_birth`, `fiscal_code`, `enrolment_date`, `registration_number`, `email`)
VALUES (865949, 20, 'Andrea', 'Giancristiano', '2001-01-05', 'gncndr01a05m052f', '2024-09-27', (SELECT MAX(CAST(registration_number AS UNSIGNED)) + 1 FROM (SELECT * FROM `students`) AS temp) , 'agiancristiano90@gmail.com' )

10. Cambiare il numero dell’ufficio del professor Pietro Rizzo in 126
UPDATE `teachers` 
SET `office_number` = '126'
WHERE `name` = 'PIETRO'
AND `surname` = 'RIZZO'

11. Eliminare dalla tabella studenti il record creato precedentemente al punto 9
DELETE FROM `students`
WHERE `id` = 865949

Queries con group by:

1. Contare quanti iscritti ci sono stati ogni anno
SELECT YEAR(enrolment_date) AS anno, COUNT(*) AS n_iscritti
FROM `students`
GROUP BY anno
ORDER BY anno;

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT `office_address`, COUNT(*) AS n_insegnanti
FROM `teachers`
GROUP BY `office_address`

3. Calcolare la media dei voti di ogni appello d'esame
SELECT `exam_id`, AVG(vote) AS media
FROM `exam_student`
GROUP BY `exam_id`

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT `department_id`, COUNT(*) AS n_corsi
FROM `degrees`
GROUP BY `department_id`

